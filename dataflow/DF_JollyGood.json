{
	"name": "DF_JollyGood",
	"properties": {
		"folder": {
			"name": "Chapter 7"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "JollyGoodExcel",
						"type": "DatasetReference"
					},
					"name": "JollyGoodSales"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorageLand",
						"type": "LinkedServiceReference"
					},
					"name": "ExchangeRates"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "RemoveTotals"
				},
				{
					"name": "USDOnly"
				},
				{
					"name": "LkupRate"
				},
				{
					"name": "Sales"
				},
				{
					"name": "Product"
				},
				{
					"name": "Metadata"
				}
			],
			"scriptLines": [
				"parameters{",
				"     RunSeqNo as integer (-1)",
				"}",
				"source(output(",
				"          Period as date,",
				"          Product as string,",
				"          {Unit Price} as double,",
				"          Currency as string,",
				"          {Units Sold} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> JollyGoodSales",
				"source(output(",
				"          FromCurrency as string,",
				"          ToCurrency as string,",
				"          Date as date,",
				"          ExchangeRate as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'excel',",
				"     container: 'sampledata',",
				"     folderPath: 'azure-data-factory-by-example-main.zip/azure-data-factory-by-example-main/SampleData',",
				"     fileName: 'ExchangeRates.xlsx',",
				"     sheetName: 'Sheet1',",
				"     firstRowAsHeader: true) ~> ExchangeRates",
				"JollyGoodSales filter(Product != 'Month Total') ~> RemoveTotals",
				"ExchangeRates filter(ToCurrency=='USD') ~> USDOnly",
				"RemoveTotals, USDOnly lookup(Currency == FromCurrency",
				"     && Period == Date,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LkupRate",
				"LkupRate derive(SalePrice = {Unit Price}*ExchangeRate,",
				"          Sales = {Unit Price}*{Units Sold}*ExchangeRate) ~> Sales",
				"Sales derive(Realtor = 'Jolly Good Ltd') ~> Product",
				"Product derive(RunSeqNo = $RunSeqNo) ~> Metadata"
			]
		}
	}
}